---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongo-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/data/mongo"


---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
apiVersion: apps/v1  # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
        role: master
        tier: backend
    spec:
      containers:
        - name: mongo
          image: docker.serra.pw:5000/mongo:4.0.4_1
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: data
              mountPath: /data/db
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mongo-pv-claim
      imagePullSecrets:
        - name: dockerserra

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
    role: master
    tier: backend
spec:
  ports:
    - port: 27017
      targetPort: 27017
  type: NodePort
  selector:
    app: mongo
    role: master
    tier: backend


---
apiVersion: apps/v1  # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: node
spec:
  selector:
    matchLabels:
      app: node
      tier: backend
  replicas: 6
  template:
    metadata:
      labels:
        app: node
        tier: backend
    spec:
      containers:
        - name: node
          image: docker.serra.pw:5000/ylz.identitymanager:2
          env:
          - name: nodeEnv
            value: dev
          - name: secret
            valueFrom:
              secretKeyRef:
                name: secretdata
                key: secret
          - name: mongouser
            valueFrom:
              secretKeyRef:
                name: mongo-user-pass
                key: mongo_user
          - name: mongopass
            valueFrom:
              secretKeyRef:
                name: mongo-user-pass
                key: mongo_passwd
          - name: mongoUrl
            value: 'mongodb://mongo:27017/IdentityManager'
          - name: mongoRsUrl:
            value: 'mongodb://identity:__Pass__@mongod-0.mongors:27017,mongod-1.mongors:27017,mongod-2.mongors:27017/IdentityManager?replicaSet=MainRepSet&readPreference=secondary'
          - name: apiPrefix
            value: '/api'
          - name: corsOrigin
            value: '["http://localhost"]'
          - name: swaggerUrl
            value: "/_docs"
          - name: swaggerDefinition
            value: '{"basePath":"/api","info": {"description": "Identity Manager API with Swagger","title": "Identity Manager API documentation","version": ""}}'
          - name: port
            value: "3000"
          ports:
            - containerPort: 9000
      imagePullSecrets:
        - name: dockerserra
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1


---
apiVersion: v1
kind: Service
metadata:
  name: node
  labels:
    app: node
    tier: backend
spec:
  ports:
    - port: 80
      targetPort: 3000
  type: NodePort
  selector:
    app: node
    tier: backend
